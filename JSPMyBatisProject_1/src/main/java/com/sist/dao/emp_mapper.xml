<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.dao.emp_mapper">
	<!-- 
		 SQL문장 저장 
		 1. 데이터를 받을 데이터형 설정 : resultType
		 2. ?에 들어가는 값을 설정 : parameterType
		 3. VO에 값을 요청시에는
		    column명이 다른 경우에는 설정
		    vo의 변수 = column이 같은 경우
		    
		 class EmpVO
		 {
		 	private int empno; ==> empno => setEmpno()
		 	private String name; ==> ename => setEname()
		 	
		 	select empno, ename
		 		   setEmpno(), setEname()
		 }
		 4. ? 대신 사용 => index
		 #{변수명} , ${테이블명/컬럼}
		 => ''
		 String name="홍길동"
		 WHERE name=${name}
		 => WHERE name=홍길동 (X)
		 WHERE name=#{name}
		 => WHERE name='홍길동' (O)
		 
		 String table="emp"
		 FROM #{table} ==> FROM 'emp'
		 FROM ${table} ==> FROM emp
		 
		 주의점 : 태그에 한 개의 SQL문장만 지정할 수 있다.
		 여러개 있는 경우에는 서브쿼리를 이용한다.
		 => <select>
		 	<insert>
		 	<update>
		 	<delete>
		 	<selectKey>
		 	<resultMap>
		 	<parameterMap>
		 	
		 => <if>
		    <forEach> IN연산자 IN()
		    <choose> 다중 조건문
		    <where> 조건문
		    <trim> 제거
		    
		    WHERE
		    <if test="col=='name'">
		    name LIKE ..
		    </if>
		    <if test="col=='subject'">
		    subject LIKE ...
		    </if>
		    
		    <resultMap type="com.sist.dao.EmpVO">
		    	<result property="empno" column="empno"/>
		    	vo.setEmpno(rs.getInt("empno"))
		    </resultMap>
		    while(rs.next())
		    {
		    	EmpVO vo=new EmpVO();
		    	
		    }
	-->
	
	<select id="empListData" resultType="EmpVO">
		SELECT empno, ename, job, mgr, TO_CHAR(hiredate, 'yyyy-MM-dd') as dbday, sal, comm, deptno FROM emp
	</select>
	
	<resultMap type="com.sist.dao.EmpVO" id="empMap">
		<result property="dvo.dname" column="dname"/>
		<result property="dvo.loc" column="loc"/>
	</resultMap>
	<select id="empDeptJoinData" resultMap="empMap">
		SELECT empno, ename, job, TO_CHAR(hiredate, 'YYYY-MM-DD') as dbday, sal, dname, loc
		FROM emp
		JOIN dept
		ON emp.deptno=dept.deptno
	</select>
	
	<select id="empDeptSubQueryData" resultMap="empMap">
		SELECT empno, ename, job, TO_CHAR(hiredate, 'YYYY-MM-DD') as dbday, sal,
		(SELECT dname FROM dept WHERE deptno=emp.deptno) as dname,
		(SELECT dname FROM dept WHERE deptno=emp.deptno) as loc
		FROM emp
	</select>
	<!--<select id="empData" resultType="EmpVO">
		SELECT * FROM emp
		WHERE sal&lt;3000
	</select>  -->
	<select id="empNameData" resultType="string">
		SELECT ename
		FROM emp	
	</select>
	
	<select id="empFindData" resultType="EmpVO" parameterType="hashmap">
		SELECT empno, ename, job, TO_CHAR(hiredate, 'YYYY-MM-DD') as dbday, sal
		FROM emp
		<trim prefix="WHERE ename IN(" suffix=")" suffixOverrides=")">
			<foreach collection="names" item="name" close=")" separator=",">
			#{name}
			</foreach>
		</trim>
	</select>
</mapper>















